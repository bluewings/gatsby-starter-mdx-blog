{"version":3,"sources":["webpack:///./src/templates/blog-post.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/components/bio.jsx"],"names":["BlogPostTemplate","props","location","_props$data","data","_props$data$site$site","site","siteMetadata","siteTitle","title","disqusShortname","social","post","mdx","_props$pageContext","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","frontmatter","description","excerpt","style","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","scale","display","marginBottom","rhythm","marginTop","date","gatsby_mdx__WEBPACK_IMPORTED_MODULE_3__","code","body","_components_bio__WEBPACK_IMPORTED_MODULE_5__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","disqus_react__WEBPACK_IMPORTED_MODULE_4__","shortname","config","identifier","id","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","fontFamily","h1,h2,h3,h4,h5,h6","fontWeight","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Layout","header","textDecoration","color","marginLeft","marginRight","maxWidth","Date","getFullYear","href","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","twitter","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-jsx-75d8a5bb3b5f2e144aca.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-mdx';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm, scale } from '../utils/typography';\n\nfunction BlogPostTemplate(props) {\n  const {\n    location,\n    data: {\n      site: {\n        siteMetadata: { title: siteTitle, social: { disqusShortname }, },\n      },\n      mdx: post,\n    },\n    pageContext: { previous, next },\n  } = props;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <h1>{post.frontmatter.title}</h1>\n      <p\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-1),\n        }}\n      >\n        {post.frontmatter.date}\n      </p>\n      <MDXRenderer>{post.code.body}</MDXRenderer>\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      <Bio />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n      {disqusShortname && (\n        <DiscussionEmbed\n          shortname={disqusShortname}\n          config={{\n            identifier: post.id,\n            title: post.frontmatter.title,\n          }}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        social { disqusShortname }\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      code {\n        body\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    body: {\n      fontFamily: `Merriweather, 'Noto Serif KR', Georgia, serif`,\n    },\n    'h1,h2,h3,h4,h5,h6': {\n      fontFamily: `Montserrat, Black Han Sans`,\n      fontWeight: 'normal',\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nconst { rhythm, scale } = typography;\n\nexport default typography;\nexport { rhythm, scale };\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../utils/typography';\nimport './layout.css';\n\nfunction Layout(props) {\n  const { location, title, children } = props;\n  // eslint-disable-next-line\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { rhythm } from '../utils/typography';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in Suwon,\n              South Korea building useful things.\n              {` `}\n              {social.twitter && (\n                <a href={`https://twitter.com/${social.twitter}`}>\n                  You should follow him on Twitter\n                </a>\n              )}\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}